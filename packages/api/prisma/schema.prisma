// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")

  categories Category[]
  expenses   Expense[]
  incomes    Income[]

  @@map("users")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expenses Expense[]

  @@unique([name, userId])
  @@map("categories")
}

model Expense {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  amount      Decimal   @db.Decimal(10, 2)
  date        DateTime? @db.Date
  categoryId  String    @map("category_id")
  description String    @default("")
  type        String    @default("one-time") // "one-time" or "recurring"
  startDate   DateTime? @map("start_date") @db.Date
  endDate     DateTime? @map("end_date") @db.Date
  receiptUrl  String?   @map("receipt_url")
  createdAt   DateTime  @default(now()) @map("created_at")

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)

  @@map("expenses")
}

model Income {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  amount      Decimal  @db.Decimal(10, 2)
  date        DateTime @db.Date
  source      String
  description String   @default("")
  createdAt   DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("incomes")
}
